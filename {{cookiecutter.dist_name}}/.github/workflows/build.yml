name: Build

on: [push, pull_request]

jobs:
  test:

    runs-on: {% raw %}${{ matrix.os }}{% endraw %}
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python_version: ['{{ cookiecutter.python_version }}']

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: {% raw %}${{ matrix.python_version }}{% endraw %}
    - name: Set up the environment
      uses: ./.github/actions/setup-pdm-env
    - name: Lint and typecheck
      run: |
        pdm run lint-check
    - name: Test
      run: |
        pdm run test-cov-xml
    - uses: codecov/codecov-action@v4
      with:
        token: {% raw %}${{ secrets.CODECOV_TOKEN }}{% endraw %}
        fail_ci_if_error: true
        verbose: true

  release:
    runs-on: ubuntu-latest
    environment: release
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
        contents: write
        id-token: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '{{ cookiecutter.python_version }}'
    - name: Set up the environment
      uses: ./.github/actions/setup-pdm-env
    - name: Build
      run: |
        pdm build
    - name: Publish ðŸ“¦ to Test PyPI
      if: startsWith(github.ref, 'refs/heads/main')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        skip_existing: true
        user: __token__
        password: {% raw %}${{ secrets.TEST_PYPI_SECRECT }}{% endraw %}
        packages-dir: dist/
        repository-url: https://test.pypi.org/legacy/
    - name: Publish ðŸ“¦ to PyPI
      if: startsWith(github.ref, 'refs/heads/main')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: {% raw %}${{ secrets.PYPI_SECRECT }}{% endraw %}
        packages-dir: dist/
